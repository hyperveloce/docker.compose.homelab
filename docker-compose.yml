version: "3.8"

services:
  # Pi-hole Service
  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    environment:
      - TZ=Australia/Melbourne
      - WEBPASSWORD=/run/secrets/admin_password
      - PIHOLE_DOCKER_TAG=latest
      - DNS1=8.8.8.8 # You can use Google DNS or another DNS server
      - DNS2=8.8.4.4 # You can use Google DNS or another DNS server
    ports:
      - "53:53/udp" # DNS port
      - "53:53/tcp" # DNS port (TCP)
      - "82:80" # Web interface
      - "444:443" # Web interface (if SSL enabled)
    volumes:
      - /srv/data/pihole_etc-pihole:/etc/pihole # Mount Pi-hole configuration directory
      - /srv/data/pihole_etc-dnsmasq.d:/etc/dnsmasq.d # Mount dnsmasq configuration directory
    networks:
      - app_network # Connect Pi-hole to your custom network
    restart: unless-stopped

  nginx_proxy_manager:
    image: "jc21/nginx-proxy-manager:latest"
    container_name: nginx_proxy_manager
    restart: always
    ports:
      - "80:80"
      - "81:81" # Admin interface
      - "443:443"
    environment:
      DB_SQLITE_FILE: "/data/database.sqlite"
    volumes:
      - /srv/data/nginxpm_data:/data
      - /srv/data/nginxpm_letsencrypt:/etc/letsencrypt

  # MariaDB Service
  db:
    image: mariadb:latest
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: /run/secrets/mysql_root_password # Change this to a strong password
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
      MYSQL_PASSWORD: /run/secrets/mysql_password # Change this to a strong password
    volumes:
      - /srv/volume/nextclouddb_data:/var/lib/mysql
    networks:
      - app_network

  # Nextcloud Service
  nextcloud:
    image: nextcloud:latest
    container_name: nextcloud
    ports:
      - "8080:80" # Exposes Nextcloud on port 8080
    environment:
      PHP_UPLOAD_MAX_SIZE: 5G
      PHP_MEMORY_LIMIT: 1024M
      APC_SHM_SIZE: 256M
      OPCACHE_MEM_SIZE: 256M
      CRON_PERIOD: 10m
      MYSQL_PASSWORD: /run/secrets/mysql_password # Same as the DB password
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
      MYSQL_HOST: db
      REDIS_HOST: redis
      REDIS_HOST_PASSWORD: redispassword # You can change this password
      MEMCACHE_LOCAL: '\OC\Memcache\Redis' # Tells Nextcloud to use Redis for local caching
      REDIS_PORT: 6379
    volumes:
      - /srv/data/nextcloud_data:/var/www/html/data # Bind mount for user data
      - /srv/data/nextcloud_config:/var/www/html/config # Docker volume for config
      - /srv/data/nextcloud_themes:/var/www/html/themes # Custom the
    depends_on:
      - db
      - redis
    networks:
      - app_network

  # Redis Service for Nextcloud Caching
  redis:
    image: redis:alpine
    container_name: redis
    command: ["redis-server", "--requirepass", "redispassword"] # Set a password for Redis
    networks:
      - app_network

  homarr:
    image: ghcr.io/ajnart/homarr:latest
    container_name: homarr
    restart: unless-stopped
    ports:
      - "7575:7575"
    volumes:
      - /srv/data/homarr_config:/config
    environment:
      - NODE_ENV=production
    networks:
      - app_network

  restic:
    image: restic/restic:latest
    container_name: restic-backup
    restart: unless-stopped
    volumes:
      - /srv/data:/srv/data # Your backup source (e.g., Nextcloud or other data directories)
      - /srv/volume:/srv/volume # Optional: If you're using a network drive
      - /home/kanasu/kserver/restic.backups:/restic/repository # Restic repository for backups
    environment:
      - RESTIC_PASSWORD=yourpassword # Secure password for your backup repository
    command:
      [
        "sh",
        "-c",
        "restic backup /srv/data --password-file /restic/password.txt",
      ]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  restic-web:
    image: restic/restic-web:latest
    container_name: restic-web
    restart: unless-stopped
    ports:
      - "8000:8000" # Exposes the UI on port 8000
    volumes:
      - /srv/data:/srv/data
      - /srv/volume:/srv/volume
      - /home/kanasu/kserver/restic.backups:/restic/repository # Use the same repository path as the Restic container
    #   - /path/to/restic/password-file:/restic/password-file # Optional: Restic password file (if used)
    # environment:
    #   - RESTIC_PASSWORD_FILE=/restic/password-file # Point to the password file (if used)
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Volumes for persistent data
volumes:
  nextclouddb_data:
    name: nextclouddb_data

# Network for both containers to communicate
networks:
  app_network:
    driver: bridge
