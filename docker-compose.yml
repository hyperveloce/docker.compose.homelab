version: "3.8"

services:
  # Pi-hole Service
  adguard:
    image: adguard/adguardhome:latest
    container_name: adguard_home
    restart: unless-stopped
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "83:80"
      - "442:443"
    volumes:
      - /srv/data/adguard.work:/opt/adguardhome/work
      - /srv/data/adguard.conf:/opt/adguardhome/conf
    environment:
      - TZ=Australia/Melbourne
    networks:
      - app_network # Connect Pi-hole to your custom network

  nginx_pm:
    image: "jc21/nginx-proxy-manager:latest"
    container_name: nginx_pm
    restart: unless-stopped
    ports:
      - "80:80"
      - "81:81" # Admin interface
      - "443:443"
    environment:
      DB_SQLITE_FILE: "/data/database.sqlite"
    volumes:
      - /srv/data/nginxpm_data:/data
      - /srv/data/nginxpm_letsencrypt:/etc/letsencrypt
    networks:
      - app_network # Connect Pi-hole to your custom network

  # MariaDB Service
  nc_db:
    image: mariadb:latest
    container_name: nc_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: /run/secrets/mysql_root_password # Change this to a strong password
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
      MYSQL_PASSWORD: /run/secrets/mysql_password # Change this to a strong password
    volumes:
      - /srv/volume/nextclouddb_data:/var/lib/mysql
    networks:
      - app_network

  # Nextcloud Service
  nextcloud:
    image: nextcloud:latest
    container_name: nextcloud
    restart: unless-stopped
    ports:
      - "8080:80" # Exposes Nextcloud on port 8080
    environment:
      MYSQL_PASSWORD: /run/secrets/mysql_password # Same as the DB password
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
      MYSQL_HOST: nc_db
      REDIS_HOST: nc_redis
      REDIS_HOST_PASSWORD: redispassword # You can change this password
      REDIS_PORT: 6379
    volumes:
      - /srv/data/nextcloud_data:/var/www/html/data # Bind mount for user data
      - /srv/data/nextcloud_config:/var/www/html/config # Docker volume for config
      - /srv/data/nextcloud_themes:/var/www/html/themes # Custom the
    depends_on:
      - nc_db
      - nc_redis
    networks:
      - app_network

  # Redis Service for Nextcloud Caching
  nc_redis:
    image: redis:alpine
    container_name: nc_redis
    restart: unless-stopped
    command: ["redis-server", "--requirepass", "redispassword"] # Set a password for Redis
    networks:
      - app_network

  immich-server:
    image: ghcr.io/immich-app/immich-server:latest
    container_name: immich_server
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - /srv/data/immich_data:/app/data
      - /srv/data/immich_config:/app/config
    environment:
      - DATABASE_URL=postgresql://kanasu:your_password_here@im_db:5432/immich?schema=public
      - REDIS_URL=redis://im_redis:6379
      - TZ=Australia/Melbourne
    depends_on:
      - im_db
      - im_redis
    networks:
      - app_network

  immich-microservice:
    image: ghcr.io/immich-app/immich-microservice:latest
    container_name: immich_microservice
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://kanasu:your_password_here@im_db:5432/immich?schema=public
      - REDIS_URL=redis://im_redis:6379
      - TZ=Australia/Melbourne
    depends_on:
      - im_db
      - im_redis
    networks:
      - app_network

  im_db:
    image: postgres:13
    container_name: im_db
    restart: unless-stopped
    volumes:
      - /srv/volume/immichdb_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=kanasu
      - POSTGRES_PASSWORD=your_password_here
      - POSTGRES_DB=im_db
    networks:
      - app_network

  im_redis:
    image: redis:6
    container_name: im_redis
    restart: unless-stopped
    networks:
      - app_network

  homarr:
    image: ghcr.io/homarr-labs/homarr:latest
    container_name: homarr
    restart: unless-stopped
    ports:
      - "7575:7575"
    volumes:
      - /srv/data/homarr_appdata:/appdata
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - SECRET_ENCRYPTION_KEY=2bfd284f39d01c07913fd2b8a8fe43bbc9aaad3ae6c2983aa38c7ca49e2bd4c7
    networks:
      - app_network

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    ports:
      - "9000:9000" # Port for the Portainer web UI
    volumes:
      - /srv/volume/portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app_network

  filebrowser:
    image: filebrowser/filebrowser:latest
    container_name: filebrowser
    restart: unless-stopped
    ports:
      - "89:80" # Adjust to your preferred port
    volumes:
      - /srv/volume/filebrowser_database:/database
      - /srv/data/filebrowser_files:/srv
    environment:
      - PUID=1000 # Adjust to your desired user ID
      - PGID=1000 # Adjust to your desired group ID
      - TZ=Australia/Melbourne
    networks:
      - app_network

# Volumes for persistent data
volumes:
  nextclouddb_data:
    name: nextclouddb_data
  immichdb_data:
    name: immichdb_data
  portainer_data:
    name: portainer_data

# Network for both containers to communicate
networks:
  app_network:
    driver: bridge
